[project]
name = "bird-finder-app"
version = "0.1.0"
description = "A comprehensive bird finding application using eBird API data with DLT pipeline orchestration and DBT transformations"
authors = [
    { email = "flocka_birdz@pm.me" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12,<3.13"
keywords = ["birds", "ebird", "data-pipeline", "dlt", "dbt", "dagster"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "dlt>=0.5,<1.0",
    "duckdb>=0.8,<2.0",
    "python-dotenv>=0.20.0",
    "dbt-duckdb>=1.6,<2.0",
    "s3fs>=2023.6.0",
    "dagster>=1.4,<2.0",
    "dagster-webserver>=1.4,<2.0",
    "dagster-dlt>=0.24,<1.0",
    "dbt-osmosis>=0.12.4",
    "dagster-dbt>=0.21,<1.0",
    "numpy>=1.26,<2.0",
    "psutil>=6.0.0",
    "ruff>=0.12.4",
]

[project.urls]
Homepage = "https://github.com/your-username/bird-finder-app"
Repository = "https://github.com/your-username/bird-finder-app"
Documentation = "https://github.com/your-username/bird-finder-app#readme"
Issues = "https://github.com/your-username/bird-finder-app/issues"

[project.scripts]
gen-staging = "bird_finder.scripts.staging:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/bird_finder"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.dagster]
module_name = "bird_finder.orchestration"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
    | __pycache__
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bird_finder"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "__pycache__/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=bird_finder --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/bird_finder"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.uv]
dev-dependencies = []
